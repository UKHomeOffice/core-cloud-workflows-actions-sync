name: Sync Public Workflows to Hub

on:
  push:
    branches:
      - main

  workflow_dispatch:
  #schedule:
    # Run hourly
    #- cron: '0 * * * *'

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      repos: ${{ steps.set-matrix.outputs.repos }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate matrix from workflow_repos.txt
        id: set-matrix
        run: |
          repos_json=$(jq -c -R -s 'split("\n") | map(select(length > 0))' workflow_repos.txt)
          echo "repos=${repos_json}" >> $GITHUB_OUTPUT

  sync-to-hub:
    needs: generate-matrix
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        repo: ${{ fromJSON(needs.generate-matrix.outputs.repos) }}
    steps:
      - name: Generate token from GitHub App
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.HUB_APP_ID }}
          private-key: ${{ secrets.HUB_APP_PRIVATE_KEY }}
          owner: UKHomeOffice

      - name: Checkout hub repository
        uses: actions/checkout@v4
        with:
          repository: UKHomeOffice/core-cloud-workflows-actions-sync
          token: ${{ steps.generate-token.outputs.token }}
          path: hub
          fetch-depth: 0

      - name: Checkout source repository ${{ matrix.repo }}
        uses: actions/checkout@v4
        with:
          repository: UKHomeOffice/${{ matrix.repo }}
          token: ${{ steps.generate-token.outputs.token }}
          path: source-repo
          fetch-depth: 0

      - name: Import GPG key and Configure Git
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GIT_USER_NAME: "workflows-actions-sync[bot]"
          GIT_USER_EMAIL: "workflows-actions-sync[bot]@users.noreply.github.com"
        run: |
          # Import the GPG key
          GPG_KEY_ID=$(echo "$GPG_PRIVATE_KEY" | base64 -d | gpg --import --batch --yes 2>&1 | grep 'secret key imported' | awk '{print $4}')

          if [ -z "$GPG_KEY_ID" ]; then
            echo "Failed to import GPG key."
            exit 1
          fi

          echo "GPG Key imported with ID: $GPG_KEY_ID"

          # Configure git
          git config --global user.name "$GIT_USER_NAME"
          git config --global user.email "$GIT_USER_EMAIL"
          git config --global user.signingkey "$GPG_KEY_ID"
          git config --global commit.gpgsign true

      - name: Sync ${{ matrix.repo }} to Hub Repository
        env:
          APP_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          cd hub
          
          REPO_DIR="workflows/${{ matrix.repo }}"
          
          if [ -d "$REPO_DIR" ]; then
            rm -rf "$REPO_DIR"
          fi
          
          mkdir -p "$REPO_DIR"
          
          cp -r ../source-repo/* "$REPO_DIR/" 2>/dev/null || true
          cp -r ../source-repo/.[^.]* "$REPO_DIR/" 2>/dev/null || true
          
          git add "$REPO_DIR"
          
          if ! git diff --staged --quiet; then
            git commit -m "Sync ${{ matrix.repo }} - $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
            git push origin main
            echo "✅ Successfully synced ${{ matrix.repo }} to hub"
          else
            echo "ℹ️ No changes detected for ${{ matrix.repo }}"
          fi
