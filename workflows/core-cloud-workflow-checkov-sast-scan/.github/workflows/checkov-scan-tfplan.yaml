# This workflow is for scanning your Terraform Plan file/s with Checkov
# Environment variables are currently used instead of a Checkov config file as all options are available and it saves having to add additional steps for checking out the repo with a token.
# https://github.com/bridgecrewio/checkov-action/blob/master/action.yml

name: Checkov Reusable Plan Scan

on:
  workflow_call:
    inputs:
      plan_role:
        required: false
        type: string
      env_name:
        required: false
        type: string
      path:
        required: false
        type: string
      version-tag:
        required: false
        type: string
        default: 'main'
    secrets:
      account_id:
        required: false

permissions:
  contents: read
  id-token: write
  actions: read
  security-events: write

jobs:
  checkov-scan:
    runs-on: ubuntu-latest
    environment: ${{ inputs.env_name || '' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Checkout reusable workflow for custom policies
        uses: actions/checkout@v4
        with:
          repository: 'UKHomeOffice/core-cloud-workflow-checkov-sast-scan'
          ref: ${{ inputs.version-tag }}
          path: 'checkout-central-checkov-policies'

      - name: Move policies
        run: |
          mkdir -p central-checkov-policies
          mv checkout-central-checkov-policies/central-checkov-policies central-checkov-policies

      - uses: aws-actions/configure-aws-credentials@v4
        id: assume
        if: ${{ inputs.plan_role != '' }}
        name: Configure AWS IdP Credentials
        with:
          role-to-assume: arn:aws:iam::${{ secrets.account_id }}:role/${{ inputs.plan_role }}
          role-session-name: GitHubActions
          retry-max-attempts: 5
          aws-region: eu-west-2

      - name: Setup Terraform
        if: ${{ inputs.plan_role != '' }}
        id: terraform_setup
        uses: hashicorp/setup-terraform@v3

      - name: Create output folder
        if: ${{ inputs.plan_role != '' }}
        id: create_output_folder
        run: mkdir -p $GITHUB_WORKSPACE/outputs/${{ inputs.path }}

      - name: Terragrunt Plan
        if: ${{ inputs.plan_role != '' }}
        id: terraform_plan
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: 1.9.3
          tg_version: 0.59.6
          tg_dir: ./${{ inputs.path }}
          tg_command: 'run-all plan --terragrunt-out-dir /github/workspace/outputs/${{ inputs.path }} --terragrunt-json-out-dir /github/workspace/outputs/${{ inputs.path }}'
        timeout-minutes: 20
        env:
          TF_VAR_env_name: ${{ inputs.env_name }}
          env_name: ${{ inputs.env_name }}

      - name: Run Checkov Scan (Plan Files)
        if: ${{ inputs.plan_role != '' }}
        id: checkov_scan_plan
        uses: bridgecrewio/checkov-action@v12
        with:
          output_format: cli,sarif
          quiet: true
          # Enabling soft_fail temporarily for easier adoption. Once repos are compliant, remove this and use skip_check or soft_fail_on containing the global suppression list agreed by the SWG.
          soft_fail: true
          # Use skip_check if we don't want the check to appear in the console.
          # Use soft_fail_on when we want to make the suppressed check known e.g. for future mitigation.
          # skip_check: CKV_AWS_EXAMPLE1,CKV_AWS_EXAMPLE2
          # soft_fail_on: CKV_AWS_EXAMPLE1,CKV_AWS_EXAMPLE2
          directory: ${{ github.workspace }}/outputs/${{ inputs.path }}
          output_file_path: results-plan.sarif
          external_checks_dirs: central-checkov-policies
          skip_check: CKV_CCL_CUSTOM_001,CKV_CCL_CUSTOM_002

      - name: Upload SARIF file (Plan Files)
        if: ${{ inputs.plan_role != '' && (success() || failure()) }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'results-plan.sarif'
          category: 'checkov-plan-scan'

      - name: Run Checkov Scan
        id: checkov_scan
        uses: bridgecrewio/checkov-action@v12
        with:
          output_format: cli,sarif
          quiet: true
          # Enabling soft_fail temporarily for easier adoption. Once repos are compliant, remove this and use skip_check or soft_fail_on containing the global suppression list agreed by the SWG.
          soft_fail: true
          # Use skip_check if we don't want the check to appear in the console.
          # Use soft_fail_on when we want to make the suppressed check known e.g. for future mitigation.
          # skip_check: CKV_AWS_EXAMPLE1,CKV_AWS_EXAMPLE2
          # soft_fail_on: CKV_AWS_EXAMPLE1,CKV_AWS_EXAMPLE2
          directory: '.'
          output_file_path: results-root.sarif
          external_checks_dirs: central-checkov-policies
          skip_check: CKV_CCL_CUSTOM_001,CKV_CCL_CUSTOM_002

      - name: Upload SARIF file (Repository Root)
        if: ${{ success() || failure() }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'results-root.sarif'
          category: 'checkov-repo-scan' 
