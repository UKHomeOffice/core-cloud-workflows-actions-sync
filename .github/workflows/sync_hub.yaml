name: Sync Public Workflows to Hub

on:
  push:
    branches:
      - main

  workflow_dispatch:
  #schedule:
    # Run hourly
    #- cron: '0 * * * *'

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      repos: ${{ steps.set-matrix.outputs.repos }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate matrix from workflow_repos.txt
        id: set-matrix
        run: |
          repos_json=$(jq -c -R -s 'split("\n") | map(select(length > 0))' workflow_repos.txt)
          echo "repos=${repos_json}" >> $GITHUB_OUTPUT

  sync-to-hub:
    needs: generate-matrix
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        repo: ${{ fromJSON(needs.generate-matrix.outputs.repos) }}
    steps:
      - name: Generate token from GitHub App
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.HUB_APP_ID }}
          private-key: ${{ secrets.HUB_APP_PRIVATE_KEY }}
          owner: UKHomeOffice

      - name: Checkout hub repository
        uses: actions/checkout@v4
        with:
          repository: UKHomeOffice/core-cloud-workflows-actions-sync
          token: ${{ steps.generate-token.outputs.token }}
          path: hub
          fetch-depth: 0

      - name: Checkout source repository ${{ matrix.repo }}
        uses: actions/checkout@v4
        with:
          repository: UKHomeOffice/${{ matrix.repo }}
          token: ${{ steps.generate-token.outputs.token }}
          path: source-repo
          fetch-depth: 0

      - name: Import GPG key and Configure Git
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          HUB_APP_SLUG: "workflows-actions-sync"
          HUB_APP_ID: ${{ secrets.HUB_APP_ID }}
        run: |
          # Import the GPG key
          GIT_USER_NAME="${HUB_APP_SLUG}[bot]"
          GIT_USER_EMAIL="${HUB_APP_ID}+${HUB_APP_SLUG}[bot]@users.noreply.github.com"
          echo "Configuring Git with user: $GIT_USER_NAME and email: $GIT_USER_EMAIL"

          echo "$GPG_PRIVATE_KEY" | base64 -d | gpg --import --batch --yes

          GPG_KEY_ID=$(gpg --list-secret-keys --with-colons | grep '^sec:' | head -n 1 | cut -d: -f5)

          if [ -z "$GPG_KEY_ID" ]; then
            echo "Failed to find GPG key ID after import."
            exit 1
          fi

          echo "Successfully imported GPG key with ID: $GPG_KEY_ID"

          git config --global user.name "$GIT_USER_NAME"
          git config --global user.email "$GIT_USER_EMAIL"
          git config --global user.signingkey "$GPG_KEY_ID"
          git config --global commit.gpgsign true

      - name: Sync ${{ matrix.repo }} to Hub Repository
        run: |
          HUB_DIR="./hub"
          SOURCE_DIR="./source-repo"
          DEST_DIR="${HUB_DIR}/workflows/${{ matrix.repo }}"

          echo "Workspace content:"
          ls -la
          echo "Hub content:"
          ls -la "$HUB_DIR"
          echo "Attempting to create directory: [$DEST_DIR]"
          mkdir -p "$REPO_DIR"

          # Use rsync to copy files without the .git directory
          rsync -av --delete --exclude='.git' "${SOURCE_DIR}/" "$DEST_DIR/"

          git -C "$HUB_DIR" add "workflows/${{ matrix.repo }}"

          if ! git -C "$HUB_DIR" diff --staged --quiet; then
            echo "Changes detected. Committing and pushing..."
            git -C "$HUB_DIR" commit -m "Sync ${{ matrix.repo }} - $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
            
            # Push the signed commit
            git -C "$HUB_DIR" push "https://x-access-token:${{ steps.generate-token.outputs.token }}@github.com/<YOUR_ORG>/hub-repo.git" main
            echo "âœ… Successfully synced ${{ matrix.repo }} to hub"
          else
            echo "  No changes detected for ${{ matrix.repo }}"
          fi

      - name: Debug
        run: |
          tree .
