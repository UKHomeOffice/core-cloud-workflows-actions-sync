name: Sonarqube Reusable Scanner

on:
  workflow_call:
    secrets:
      account_id:
        required: false
      sonar_token:
        required: true
      sonar_host_url:
        required: true

permissions:
  contents: read
  id-token: write
  actions: read
  security-events: write

jobs:
  sonarqube-scanner:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build SonarQube arguments
        id: build_args
        run: |
          EXTRA_ARGS=""
          # Check if 'sonar.projectKey' is already defined in the properties file.
          if ! grep -q "sonar.projectKey" sonar-project.properties; then
            echo "sonar.projectKey not found in properties file. Using repo name as fallback."
            EXTRA_ARGS="${EXTRA_ARGS} -Dsonar.projectKey=${{ github.event.repository.name }}"
          fi
          # Check if 'sonar.projectName' is already defined in the properties file.
          if ! grep -q "sonar.projectName" sonar-project.properties; then
            echo "sonar.projectName not found in properties file. Using repo name as fallback."
            EXTRA_ARGS="${EXTRA_ARGS} -Dsonar.projectName=${{ github.event.repository.name }}"
          fi
          echo "sonar-args=$EXTRA_ARGS" >> "$GITHUB_OUTPUT"

      - id: sonar-scan
        uses: sonarsource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.sonar_token }}
          SONAR_HOST_URL: ${{ secrets.sonar_host_url }}
          DEBUG1: ${{ github.repository }}
          DEBUG2: ${{ github.event.repository.name }}
        with:
          args: >
            ${{ steps.build_args.outputs.sonar-args }}
            -Dsonar.sources=.
            -Dsonar.qualitygate.wait=false
            -Dsonar.sarif.path=sonar-report.sarif
            -Dsonar.terraform.provider.aws.version=5.0
            -Dsonar.scm.provider=git
